name: Mac OSX

on:
  push:
    branches:
      - master
      - 'dev**'
  pull_request:
    paths:
      - 'tesseract**'
      - '.github/workflows/mac.yml'
      - '**.repos'
  schedule:
    - cron: '0 5 * * *'
  release:
    types:
      - released

env:
  VCPKG_PKGS: >- 
    boost-dll boost-program-options boost-stacktrace
    boost-serialization boost-filesystem
    tinyxml2 console-bridge assimp
    urdfdom octomap orocos-kdl pcl
    gtest benchmark flann jsoncpp
    yaml-cpp eigen3
    openblas
    fcl ompl taskflow
    bullet3[multithreading,double-precision,rtti]
    ccd[double-precision] gperftools

jobs:
  build-macos:
    strategy:
      fail-fast: false
      matrix:
        config:
          - runner: macos-13
            vcpkg_triplet: x64-osx-dynamic-release
            arch: x64
            homebrew_root: /usr/local
          - runner: macos-14
            vcpkg_triplet: arm64-osx-dynamic-release
            arch: arm64
            homebrew_root: /opt/homebrew
    runs-on: ${{ matrix.config.runner }}
    steps:
    - uses: actions/checkout@v2
      with:
        path: target_ws/src
    - uses: actions/setup-python@v4
      id: setup-python
      with:
        python-version: '3.12'
    - name: brew
      run: |
        brew install libomp cmake automake autoconf libtool gcc ninja    
    - name: vcpkg build
      uses: johnwason/vcpkg-action@v7
      with:
        pkgs: >-
          ${{ env.VCPKG_PKGS }}
        triplet: ${{ matrix.config.vcpkg_triplet }}
        extra-args: --clean-after-build --overlay-triplets=${{ github.workspace }}/target_ws/src/.github/workflows/vcpkg_triplets
        token: ${{ github.token }}
        cache-key: osx-${{ matrix.config.arch }}-vcpkg
        revision: master
    - name: update environment
      shell: bash
      run: |
        echo "DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$GITHUB_WORKSPACE/vcpkg/installed/${{ matrix.config.vcpkg_triplet }}/lib" >> "$GITHUB_ENV"
        echo "CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:$GITHUB_WORKSPACE/vcpkg/installed/${{ matrix.config.vcpkg_triplet }}" >> "$GITHUB_ENV"
    - name: Build and Tests
      uses: tesseract-robotics/colcon-action@v13
      with:
        ccache-prefix: ci-mac-build-${{ matrix.config.name }}
        vcs-file: .github/workflows/windows_dependencies.repos
        rosdep-enabled: false
        upstream-args: >-
          --merge-install
          --cmake-args -G "Ninja" -DVCPKG_TARGET_TRIPLET=${{ matrix.config.vcpkg_triplet }} -DCMAKE_BUILD_TYPE=Release
          -DVCPKG_APPLOCAL_DEPS=OFF -DTESSERACT_ENABLE_TESTING=ON \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=12.0 \
          -DOpenMP_CXX_INCLUDE_DIR=${{ matrix.config.homebrew_root }}/opt/libomp/include \
          -DOpenMP_C_INCLUDE_DIR=${{ matrix.config.homebrew_root }}/opt/libomp/include \
          -DOpenMP_CXX_LIB_NAMES=libomp -DOpenMP_CXX_FLAGS="-Xpreprocessor -fopenmp" \
          -DOpenMP_C_LIB_NAMES=libomp -DOpenMP_C_FLAGS="-Xpreprocessor -fopenmp" \
          -DOpenMP_libomp_LIBRARY=${{ matrix.config.homebrew_root }}/opt/libomp/lib/libomp.dylib
        target-path: target_ws/src
        target-args: >-
          --merge-install
          --cmake-args -G "Ninja" -DVCPKG_TARGET_TRIPLET=${{ matrix.config.vcpkg_triplet }} 
          -DCMAKE_BUILD_TYPE=Release -DTESSERACT_ENABLE_TESTING=ON
          -DVCPKG_APPLOCAL_DEPS=OFF -DTESSERACT_ENABLE_TESTING=ON \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=12.0 \
          -DOpenMP_CXX_INCLUDE_DIR=${{ matrix.config.homebrew_root }}/opt/libomp/include \
          -DOpenMP_C_INCLUDE_DIR=${{ matrix.config.homebrew_root }}/opt/libomp/include \
          -DOpenMP_CXX_LIB_NAMES=libomp -DOpenMP_CXX_FLAGS="-Xpreprocessor -fopenmp" \
          -DOpenMP_C_LIB_NAMES=libomp -DOpenMP_C_FLAGS="-Xpreprocessor -fopenmp" \
          -DOpenMP_libomp_LIBRARY=${{ matrix.config.homebrew_root }}/opt/libomp/lib/libomp.dylib
        run-tests-args: --merge-install
        
