name: Benchmarking

on:
  push:

jobs:
  industrial_ci:
    name: ${{ matrix.env.CI_NAME }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env:
          - {CI_NAME: Focal-Benchmark,
             OS_NAME: ubuntu,
             OS_CODE_NAME: focal,
             ROS_DISTRO: noetic,
             ROS_REPO: main,
             UPSTREAM_WORKSPACE: 'dependencies.rosinstall',
             ROSDEP_SKIP_KEYS: "bullet ros_industrial_cmake_boilerplate fcl iwyu",
             DOCKER_IMAGE: "rosindustrial/tesseract:noetic",
             CCACHE_DIR: "/home/runner/work/tesseract/tesseract/Focal-Benchmark/.ccache",
             UPSTREAM_CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=Release",
             TARGET_CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=Release -DTESSERACT_ENABLE_TESTING=OFF -DTESSERACT_ENABLE_BENCHMARKING=ON -DTESSERACT_ENABLE_RUN_BENCHMARKING=ON -DBENCHMARK_ARGS=CI_ONLY",
             DOCKER_RUN_OPTS: '-v ~/work/tesseract/tesseract/benchmarks:/root/benchmarks',
             AFTER_SCRIPT: 'cp -r $target_ws/build/tesseract_collision/test/benchmarks/*.json /root/benchmarks/ && cp -r $target_ws/build/tesseract_environment/test/benchmarks/*.json /root/benchmarks/'}

    steps:
      - uses: actions/checkout@v1

      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")

      - name: ccache cache files
        uses: actions/cache@v1.1.0
        with:
          path: ${{ matrix.env.CI_NAME }}/.ccache
          key: ${{ matrix.env.CI_NAME }}-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
          restore-keys: |
            ${{ matrix.env.CI_NAME }}-ccache-

      - uses: 'ros-industrial/industrial_ci@master'
        env: ${{matrix.env}}

      - name: Store Bullet Discrete Simple benchmark result
        uses: rhysd/github-action-benchmark@v1
        with:
          name: Bullet Discrete Simple C++ Benchmark
          tool: 'googlecpp'
          output-file-path: /home/runner/work/tesseract/tesseract/benchmarks/tesseract_collision_bullet_discrete_simple_benchmarks_results.json
          # Use personal access token instead of GITHUB_TOKEN due to https://github.community/t5/GitHub-Actions/Github-action-not-triggering-gh-pages-upon-push/td-p/26869/highlight/false
          github-token: ${{ secrets.GITHUB_TOKEN }} # GitHub API token to make a commit comment
          auto-push: false
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: false
          alert-comment-cc-users: '@mpowelson'
          max-items-in-chart: 20

      - name: Store Bullet Discrete BVH benchmark result
        uses: rhysd/github-action-benchmark@v1
        with:
          name: Bullet Discrete BVH C++ Benchmark
          tool: 'googlecpp'
          output-file-path: /home/runner/work/tesseract/tesseract/benchmarks/tesseract_collision_bullet_discrete_bvh_benchmarks_results.json
          # Use personal access token instead of GITHUB_TOKEN due to https://github.community/t5/GitHub-Actions/Github-action-not-triggering-gh-pages-upon-push/td-p/26869/highlight/false
          github-token: ${{ secrets.GITHUB_TOKEN }} # GitHub API token to make a commit comment
          auto-push: false
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: false
          alert-comment-cc-users: '@mpowelson'
          max-items-in-chart: 20

      - name: Store FCL Discrete BVH benchmark result
        uses: rhysd/github-action-benchmark@v1
        with:
          name: FCL Discrete BVH C++ Benchmark
          tool: 'googlecpp'
          output-file-path: /home/runner/work/tesseract/tesseract/benchmarks/tesseract_collision_fcl_discrete_bvh_benchmarks_results.json
          # Use personal access token instead of GITHUB_TOKEN due to https://github.community/t5/GitHub-Actions/Github-action-not-triggering-gh-pages-upon-push/td-p/26869/highlight/false
          github-token: ${{ secrets.GITHUB_TOKEN }} # GitHub API token to make a commit comment
          auto-push: false
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: false
          alert-comment-cc-users: '@mpowelson'
          max-items-in-chart: 20

      - name: Store Environment Clone benchmark result
        uses: rhysd/github-action-benchmark@v1
        with:
          name: Environment Clone C++ Benchmark
          tool: 'googlecpp'
          output-file-path: /home/runner/work/tesseract/tesseract/benchmarks/tesseract_environment_clone_benchmark_results.json
          # Use personal access token instead of GITHUB_TOKEN due to https://github.community/t5/GitHub-Actions/Github-action-not-triggering-gh-pages-upon-push/td-p/26869/highlight/false
          github-token: ${{ secrets.GITHUB_TOKEN }} # GitHub API token to make a commit comment
          auto-push: false
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: false
          alert-comment-cc-users: '@mpowelson'
          max-items-in-chart: 20

      # PERSONAL_GITHUB_TOKEN needed here since we are pushing to a branch
      - name: Push benchmark result
        run: git push 'https://ros-industrial-consortium:${{ secrets.PERSONAL_GITHUB_TOKEN }}@github.com/ros-industrial-consortium/tesseract.git' gh-pages:gh-pages
        if: github.event_name != 'pull_request'
